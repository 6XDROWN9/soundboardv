const Discord = require('discord.js');
const client = new Discord.Client();
const ytdl = require('ytdl-core');
const request = require('request');
const fs = require('fs');
const getYoutubeID = require('get-youtube-id');
const fetchVideoInfo = require('youtube-info');
const yt_api_key = "AIzaSyDeoIH0u1e72AtfpwSKKOSy3IPp2UHzqi4";
const prefix = '!>'

client.on('message', message => {
	if(message.content.startsWith(prefix + 'sb')) {
		message.delete();
    const voiceChannel = message.member.voiceChannel;
    if (!voiceChannel) return message.reply(`**Ÿäÿ≠ÿ® ÿßŸÜ ÿ™ŸÉŸàŸÜ ŸÅŸä ÿ±ŸàŸÖ ÿµŸàÿ™Ÿä**`);

	let embed = new Discord.RichEmbed()
    .setAuthor(`${message.author.tag}`, message.author.avatarURL)
	.setColor('#000000')
	.setFooter("ÿ≥ÿßŸàŸÜÿØ ÿ®Ÿàÿ±ÿØ | ÿ≥ÿßŸàŸÜÿØ ÿ®Ÿàÿ±ÿØ ŸÇŸÖÿØÿØÿØ", 'https://d30y9cdsu7xlg0.cloudfront.net/png/105264-200.png')
      .setDescription(` 
     üî• ŸÑÿßÿ¶ÿ≠ÿ© ÿßŸÑÿ≥ÿßŸàŸÜÿØ ÿ®Ÿàÿ±ÿØ üî•
	 
üá¶ ÿ™ŸÅÿ≠Ÿäÿ∑ ÿØÿßÿπÿ¥ ÿßŸÑŸÑŸá ÿßŸÉÿ®ÿ±ÿ±ÿ±ÿ±ÿ±ÿ± üí£
üáß NANI?! üò£
üá® Dank Meme üê∏
‚èπ ŸÑÿ•ŸäŸÇÿßŸÅ ÿßŸÑÿ≥ÿßŸàŸÜÿØ ÿ®Ÿàÿ±ÿØ
üá© Okay , Okayyy üçÉ
üá™ Hold Up Hey üòé
üá´ Ass is Real Dank meme üî•`)
	
	message.channel.sendEmbed(embed).then(msg => {
			msg.react('üá¶')
		.then(() => msg.react('üáß'))
		.then(() => msg.react('üá®'))
		.then(() => msg.react('‚èπ'))
		.then(() => msg.react('üá©'))
		.then(() => msg.react('üá™'))
		.then(() => msg.react('üá´'))

// Filters		
	let filter1 = (reaction, user) => reaction.emoji.name === 'üá¶' && user.id === message.author.id;
	let filter2 = (reaction, user) => reaction.emoji.name === 'üáß' && user.id === message.author.id;
	let filter3 = (reaction, user) => reaction.emoji.name === 'üá®' && user.id === message.author.id;
	let filter4 = (reaction, user) => reaction.emoji.name === '‚èπ' && user.id === message.author.id;
	let filter5 = (reaction, user) => reaction.emoji.name === 'üá©' && user.id === message.author.id;
	let filter6 = (reaction, user) => reaction.emoji.name === 'üá™' && user.id === message.author.id;
	let filter7 = (reaction, user) => reaction.emoji.name === 'üá´' && user.id === message.author.id;

// Collectors
	let collector1 = msg.createReactionCollector(filter1, { time: 120000 });
	let collector2 = msg.createReactionCollector(filter2, { time: 120000 });
	let collector3 = msg.createReactionCollector(filter3, { time: 120000 });
	let collector4 = msg.createReactionCollector(filter4, { time: 120000 });
	let collector5 = msg.createReactionCollector(filter5, { time: 120000 });
	let collector6 = msg.createReactionCollector(filter6, { time: 120000 });
	let collector7 = msg.createReactionCollector(filter7, { time: 120000 });
	
// Events
collector1.on('collect', r => {
    voiceChannel.join()
      .then(connnection => {
        const stream = ytdl("https://www.youtube.com/watch?v=2GbwdX72PrU", { filter: 'audioonly' });
        const dispatcher = connnection.playStream(stream);
        dispatcher.on('end', () => voiceChannel.leave());
		collector1.stop();
		collector2.stop();
		collector3.stop();
		collector4.stop();
		collector5.stop();
		collector6.stop();
		collector7.stop();
		embed.setDescription(`<@${message.author.id}> **ÿ™ŸÖ ÿ™ÿ¥ÿ∫ŸäŸÑ ÿ™ŸÅÿ≠ŸäŸäÿ∑ ÿØÿßÿπÿ¥**`);
		msg.edit(embed).then(msg.delete(5000));
   });
});
collector2.on('collect', r => {
    voiceChannel.join()
      .then(connnection => {
        const stream = ytdl("https://www.youtube.com/watch?v=sU0K4q3YRfw", { filter: 'audioonly' });
        const dispatcher = connnection.playStream(stream);
        dispatcher.on('end', () => voiceChannel.leave());
		collector1.stop();
		collector2.stop();
		collector3.stop();
		collector4.stop();
		collector5.stop();
		collector6.stop();
		collector7.stop();
		embed.setDescription(`<@${message.author.id}> **ÿ™ŸÖ ÿ™ÿ¥ÿ∫ŸäŸÑ ŸÜÿßŸÜŸäŸäŸä**`);
		msg.edit(embed).then(msg.delete(5000));
      });
});
collector3.on('collect', r => {
    voiceChannel.join()
      .then(connnection => {
        const stream = ytdl("https://www.youtube.com/watch?v=9BA44ZFW8J4", { filter: 'audioonly' });
        const dispatcher = connnection.playStream(stream);
        dispatcher.on('end', () => voiceChannel.leave());
		collector1.stop();
		collector2.stop();
		collector3.stop();
		collector4.stop();
		collector5.stop();
		collector6.stop();
		collector7.stop();
		embed.setDescription(`<@${message.author.id}> **ÿ™ŸÖ ÿ™ÿ¥ÿ∫ŸäŸÑ ÿØÿßÿßŸÜŸÉ ŸÖŸäŸÖ ÿ™ŸÅÿ≠Ÿäÿ∑**`);
		msg.edit(embed).then(msg.delete(5000));
      });
});
collector4.on('collect', r => {
	if (message.guild.voiceConnection) message.guild.voiceConnection.disconnect();
		collector1.stop();
		collector2.stop();
		collector3.stop();
		collector4.stop();
		collector5.stop();
		collector6.stop();
		collector7.stop();
		embed.setDescription(`<@${message.author.id}> **ÿ™ŸÖ ÿ•ŸäŸÇÿßŸÅ ÿßŸÑÿ≥ÿßŸàŸÜÿØ ÿ®Ÿàÿ±ÿØ**`);
		msg.edit(embed).then(msg.delete(5000));
});
collector5.on('collect', r => {
    voiceChannel.join()
      .then(connnection => {
        const stream = ytdl("https://www.youtube.com/watch?v=kquqqcAP6jo", { filter: 'audioonly' });
        const dispatcher = connnection.playStream(stream);
        dispatcher.on('end', () => voiceChannel.leave());
		collector1.stop();
		collector2.stop();
		collector3.stop();
		collector4.stop();
		collector5.stop();
		collector6.stop();
		collector7.stop();
		embed.setDescription(`<@${message.author.id}> **ÿ™ŸÖ ÿ™ÿ¥ÿ∫ŸäŸÑ ÿßŸÑÿ≥ŸÇÿßÿß ÿßŸàŸÉŸäŸäŸäŸä**`);
		msg.edit(embed).then(msg.delete(5000));
      });
});
collector6.on('collect', r => {
    voiceChannel.join()
      .then(connnection => {
        const stream = ytdl("https://www.youtube.com/watch?v=ZEToVmrkjc4", { filter: 'audioonly' });
        const dispatcher = connnection.playStream(stream);
        dispatcher.on('end', () => voiceChannel.leave());
		collector1.stop();
		collector2.stop();
		collector3.stop();
		collector4.stop();
		collector5.stop();
		collector6.stop();
		collector7.stop();
		embed.setDescription(`<@${message.author.id}> **ÿ™ŸÖ ÿ™ÿ¥ÿ∫ŸäŸÑ ŸáŸàÿØ ÿßÿ® ŸáÿßŸäŸäŸä **`);
		msg.edit(embed).then(msg.delete(5000));
      });
});
collector7.on('collect', r => {
    voiceChannel.join()
      .then(connnection => {
        const stream = ytdl("https://www.youtube.com/watch?v=7rs9G3VIP4Q", { filter: 'audioonly' });
        const dispatcher = connnection.playStream(stream);
        dispatcher.on('end', () => voiceChannel.leave());
		collector1.stop();
		collector2.stop();
		collector3.stop();
		collector4.stop();
		collector5.stop();
		collector6.stop();
		collector7.stop();
		embed.setDescription(`<@${message.author.id}> **ÿ™ŸÖ ÿ™ÿ¥ÿ∫ŸäŸÑ ÿ°ŸÅ ÿ°ÿ≠ÿ≠ÿ≠ÿ≠**`);
		msg.edit(embed).then(msg.delete(5000));
      });
});
})
}
});

client.login(process.env.BOT_TOKEN);
